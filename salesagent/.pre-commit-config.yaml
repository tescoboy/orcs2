repos:
  - repo: local
    hooks:

      # Check for tenant.config references
      - id: no-tenant-config
        name: No tenant.config references
        entry: sh -c 'if grep -r "tenant\.config\|tenant\[.config.\]" --include="*.py" . | grep -v "test_migration\|postmortem\|pre-commit"; then echo "Found tenant.config references!"; exit 1; fi'
        language: system
        pass_filenames: false

      # Prevent skipping tests (but allow skip_ci for CI-specific issues)
      - id: no-skip-tests
        name: No @pytest.mark.skip decorators allowed
        entry: sh -c 'if grep -r "@pytest\.mark\.skip[^_]" --include="test_*.py" tests/ | grep -v skip_ci; then echo "❌ Found @pytest.mark.skip decorators! Tests must not be skipped."; exit 1; fi'
        language: system
        pass_filenames: false
        always_run: true

      # Prevent excessive mocking
      - id: no-excessive-mocking
        name: Prevent excessive mocking in tests
        entry: sh -c 'for f in $(find tests -name "test_*.py" 2>/dev/null); do if [ -f "$f" ]; then count=$(grep -o "@patch\|MagicMock\|Mock()" "$f" 2>/dev/null | wc -l | tr -d " "); if [ "$count" -gt 10 ]; then echo "❌ Excessive mocking in $f ($count mocks). Consider integration tests instead."; exit 1; fi; fi; done'
        language: system
        pass_filenames: false
        always_run: true

      # Ensure smoke tests pass
      - id: smoke-tests
        name: Run smoke tests (critical paths)
        entry: uv run pytest tests/smoke/ -v --tb=short -m smoke
        language: system
        pass_filenames: false
        stages: [manual]  # Run with: pre-commit run smoke-tests

      # Validate migrations can run
      - id: test-migrations
        name: Test database migrations
        entry: sh -c 'cp adcp_local.db .test.db && DATABASE_URL=sqlite:///.test.db python migrate.py && rm .test.db'
        language: system
        pass_filenames: false
        stages: [manual]  # Changed from commit to manual - run with: pre-commit run test-migrations

      # Run quick unit tests before commit (optional - can be skipped with --no-verify)
      - id: pytest-unit
        name: Run unit tests (optional)
        entry: sh -c 'uv run pytest tests/unit/ -x --tb=short -q || echo "⚠️  Tests failed but continuing (use --no-verify to skip)"'
        language: system
        pass_filenames: false
        stages: [manual]  # Changed to manual - run with: pre-commit run pytest-unit
        verbose: true

      # Test AdCP contract compliance
      - id: adcp-contract-tests
        name: Verify AdCP protocol compliance
        entry: uv run pytest tests/unit/test_adcp_contract.py -v --tb=short
        language: system
        pass_filenames: false
        always_run: true

      # Test MCP endpoints (requires server running)
      - id: mcp-endpoint-tests
        name: Test MCP endpoints
        entry: echo Run MCP tests with uv run pytest tests/integration/test_mcp_endpoints_comprehensive.py
        language: system
        pass_filenames: false
        stages: [manual]  # Manual because it needs server running


      # Validate template url_for calls
      - id: template-url-validation
        name: Validate template url_for calls
        entry: uv run pytest tests/integration/test_template_url_validation.py::TestTemplateUrlValidation::test_all_template_url_for_calls_resolve -q
        language: system
        files: '\.html$'
        pass_filenames: false


  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-json
      - id: check-merge-conflict
      - id: check-ast
      - id: debug-statements

  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
