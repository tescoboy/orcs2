# AdCP Sales Agent Environment Configuration
# Copy this file to .env and update with your actual values

# ============================================
# REQUIRED CONFIGURATION
# ============================================

# API Keys
GEMINI_API_KEY=your-gemini-api-key-here

# OAuth Configuration (choose one method)
# Method 1: Environment variables (recommended)
GOOGLE_CLIENT_ID=your-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-client-secret

# Method 2: File path (legacy - not recommended)
# GOOGLE_OAUTH_CREDENTIALS_FILE=/path/to/client_secret.json

# ============================================
# ADMIN CONFIGURATION
# ============================================

# Comma-separated list of super admin emails
SUPER_ADMIN_EMAILS=admin1@example.com,admin2@example.com

# Comma-separated list of allowed admin domains (optional)
SUPER_ADMIN_DOMAINS=example.com,company.com

# ============================================
# PORT CONFIGURATION
# ============================================
# Note: Conductor workspaces automatically get unique ports
# These are the defaults for the main deployment

POSTGRES_PORT=5432
ADCP_SALES_PORT=8080
ADMIN_UI_PORT=8001

# ============================================
# DATABASE CONFIGURATION
# ============================================

# For Docker Compose deployments (uses internal hostname)
DATABASE_URL=postgresql://adcp_user:secure_password_change_me@postgres:5432/adcp

# For standalone deployments (uses localhost)
# DATABASE_URL=postgresql://adcp_user:secure_password_change_me@localhost:5432/adcp

# Alternative: Use individual database components
# DB_TYPE=postgresql
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=adcp
# DB_USER=adcp_user
# DB_PASSWORD=secure_password_change_me

# ============================================
# SLACK INTEGRATION
# ============================================
# Note: Slack webhooks are configured per-tenant in the Admin UI
# Navigate to Tenant > Integrations tab to set up Slack notifications
# Do NOT set global Slack webhooks here

# ============================================
# AD SERVER CREDENTIALS (Optional)
# ============================================
# Only needed if using real ad server adapters

# Google Ad Manager
# GAM_NETWORK_CODE=123456789
# GAM_SERVICE_ACCOUNT_JSON='{"type":"service_account"...}'

# Kevel
# KEVEL_API_KEY=your-kevel-api-key
# KEVEL_NETWORK_ID=your-network-id

# Triton Digital
# TRITON_API_KEY=your-triton-api-key
# TRITON_STATION_ID=your-station-id

# ============================================
# DEVELOPMENT OPTIONS
# ============================================

# Enable debug logging
# DEBUG=true

# Flask development mode (set automatically in docker-compose.override.yml)
# FLASK_ENV=development
# FLASK_DEBUG=1

# Global dry-run mode (for testing)
# ADCP_DRY_RUN=true

# Default adapter when not specified in tenant config
# ADCP_ADAPTER=mock

# Data directory for SQLite (default: ~/.adcp)
# DATA_DIR=/var/lib/adcp

# ============================================
# DOCKER COMPOSE NOTES
# ============================================
# - Database migrations run automatically via entrypoint.sh
# - OAuth credentials can be set via environment or mounted files
# - Each Conductor workspace gets unique ports to avoid conflicts
# - Development features enabled via docker-compose.override.yml
# - PostgreSQL is managed by Docker Compose (no separate install needed)
